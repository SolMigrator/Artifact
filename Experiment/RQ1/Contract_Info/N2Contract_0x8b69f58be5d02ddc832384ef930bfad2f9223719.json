{
    "name": "N2Contract",
    "address": "0x8b69f58be5d02ddc832384ef930bfad2f9223719",
    "Compiler Version": "v0.4.21+commit.dfe3193c",
    "Optimization Enabled": "Yes with 200 runs",
    "Other Settings": "default evmVersion",
    "creation_bytecode": "",
    "abi": [
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                },
                {
                    "name": "_releaseTime",
                    "type": "uint256"
                }
            ],
            "name": "transferLockedToken",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_spender",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_from",
                    "type": "address"
                },
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "name": "",
                    "type": "uint8"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "releaseLockedBalance",
            "outputs": [
                {
                    "name": "releaseAmount",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "lockedBalanceCount",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "lockedBalances",
            "outputs": [
                {
                    "name": "owner",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "name": "releaseTime",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "lockedBalanceOf",
            "outputs": [
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "createTime",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "newContractAddress",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "nextReleaseTime",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_v2Address",
                    "type": "address"
                }
            ],
            "name": "setNewAddress",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "release",
            "outputs": [
                {
                    "name": "_releaseAmount",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "nextReleaseAmount",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "releasedSupply",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_owner",
                    "type": "address"
                },
                {
                    "name": "_spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "name": "remaining",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "name": "receiver",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "releaseTime",
                    "type": "uint256"
                }
            ],
            "name": "Release",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "releaseTime",
                    "type": "uint256"
                }
            ],
            "name": "TransferLockedToken",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "releaseTime",
                    "type": "uint256"
                }
            ],
            "name": "ReleaseLockedBalance",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "name": "newContract",
                    "type": "address"
                }
            ],
            "name": "ContractUpgrade",
            "type": "event"
        }
    ],
    "deployed_bytecode": "",
    "constructor_argument": "",
    "Contract Source Code": "/**\r\n *Submitted for verification at Etherscan.io on 2018-06-27\r\n*/\r\n\r\npragma solidity ^0.4.13;\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract ReentrancyGuard {\r\n  /**\r\n   * @dev We use a single lock for the whole contract.\r\n   */\r\n  bool private rentrancy_lock = false;\r\n\r\n  /**\r\n   * @dev Prevents a contract from calling itself, directly or indirectly.\r\n   * @notice If you mark a function `nonReentrant`, you should also\r\n   * mark it `external`. Calling one nonReentrant function from\r\n   * another is not supported. Instead, you can implement a\r\n   * `private` function doing the actual work, and a `external`\r\n   * wrapper marked as `nonReentrant`.\r\n   */\r\n  modifier nonReentrant() {\r\n    require(!rentrancy_lock);\r\n    rentrancy_lock = true;\r\n    _;\r\n    rentrancy_lock = false;\r\n  }\r\n}\r\n\r\ncontract AccessControl {\r\n  /// @dev Emited when contract is upgraded\r\n  event ContractUpgrade(address newContract);\r\n\r\n  address public owner;\r\n\r\n  // @dev Keeps track whether the contract is paused. When that is true, most actions are blocked\r\n  bool public paused = false;\r\n\r\n  /**\r\n   * @dev The AccessControl constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function AccessControl() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n  }\r\n\r\n  /// @dev Modifier to allow actions only when the contract IS NOT paused\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /// @dev Modifier to allow actions only when the contract IS paused\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /// @dev Called by owner role to pause the contract. Used only when\r\n  ///  a bug or exploit is detected and we need to limit damage.\r\n  function pause() external onlyOwner whenNotPaused {\r\n    paused = true;\r\n  }\r\n\r\n  /// @dev Unpauses the smart contract. Can only be called owner.\r\n  /// @notice This is public rather than external so it can be called by\r\n  ///  derived contracts.\r\n  function unpause() public onlyOwner whenPaused {\r\n    // can't unpause if contract was upgraded\r\n    paused = false;\r\n  }\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract BasicToken is AccessControl, ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    emit Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of.\r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint256 the amout of tokens to be transfered\r\n   */\r\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\r\n    uint256 _allowance = allowed[_from][msg.sender];\r\n\r\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n    // require (_value <= _allowance);\r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    emit Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\r\n    // To change the approve amount you first have to reduce the addresses`\r\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n    //  already 0 to mitigate the race condition described here:\r\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint256 specifing the amount of tokens still available for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\n\r\ncontract LockableToken is StandardToken, ReentrancyGuard {\r\n  struct LockedBalance {\r\n    address owner;\r\n    uint256 value;\r\n    uint256 releaseTime;\r\n  }\r\n\r\n  mapping (uint => LockedBalance) public lockedBalances;\r\n  uint public lockedBalanceCount;\r\n\r\n  event TransferLockedToken(address indexed from, address indexed to, uint256 value, uint256 releaseTime);\r\n  event ReleaseLockedBalance(address indexed owner, uint256 value, uint256 releaseTime);\r\n\r\n  /**\r\n  * @dev transfer and lock token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  * @param _releaseTime The time to be locked.\r\n  */\r\n  function transferLockedToken(address _to, uint256 _value, uint256 _releaseTime) public whenNotPaused nonReentrant returns (bool) {\r\n    require(_releaseTime > now);\r\n    //require(_releaseTime.sub(1 years) < now);\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    lockedBalances[lockedBalanceCount] = LockedBalance({owner: _to, value: _value, releaseTime: _releaseTime});\r\n    lockedBalanceCount++;\r\n    emit TransferLockedToken(msg.sender, _to, _value, _releaseTime);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the locked balance of the specified address.\r\n  * @param _owner The address to query the the locked balance of.\r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function lockedBalanceOf(address _owner) public constant returns (uint256 value) {\r\n    for (uint i = 0; i < lockedBalanceCount; i++) {\r\n      LockedBalance storage lockedBalance = lockedBalances[i];\r\n      if (_owner == lockedBalance.owner) {\r\n        value = value.add(lockedBalance.value);\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n  * @dev Release the locked balance if its releaseTime arrived.\r\n  * @return An uint256 representing the amount.\r\n  */\r\n  function releaseLockedBalance() public whenNotPaused returns (uint256 releaseAmount) {\r\n    uint index = 0;\r\n    while (index < lockedBalanceCount) {\r\n      if (now >= lockedBalances[index].releaseTime) {\r\n        releaseAmount += lockedBalances[index].value;\r\n        unlockBalanceByIndex(index);\r\n      } else {\r\n        index++;\r\n      }\r\n    }\r\n    return releaseAmount;\r\n  }\r\n\r\n  function unlockBalanceByIndex(uint index) internal {\r\n    LockedBalance storage lockedBalance = lockedBalances[index];\r\n    balances[lockedBalance.owner] = balances[lockedBalance.owner].add(lockedBalance.value);\r\n    emit ReleaseLockedBalance(lockedBalance.owner, lockedBalance.value, lockedBalance.releaseTime);\r\n    lockedBalances[index] = lockedBalances[lockedBalanceCount - 1];\r\n    delete lockedBalances[lockedBalanceCount - 1];\r\n    lockedBalanceCount--;\r\n  }\r\n}\r\n\r\ncontract ReleaseableToken is LockableToken {\r\n  uint256 public createTime;\r\n  uint256 public nextReleaseTime;\r\n  uint256 public nextReleaseAmount;\r\n  uint256 standardDecimals = 10000;\r\n  uint256 public totalSupply;\r\n  uint256 public releasedSupply;\r\n\r\n  function ReleaseableToken(uint256 initialSupply, uint256 initReleasedSupply, uint256 firstReleaseAmount) public {\r\n    createTime = now;\r\n    nextReleaseTime = now;\r\n    nextReleaseAmount = firstReleaseAmount;\r\n    totalSupply = standardDecimals.mul(initialSupply);\r\n    releasedSupply = standardDecimals.mul(initReleasedSupply);\r\n    balances[msg.sender] = standardDecimals.mul(initReleasedSupply);\r\n  }\r\n\r\n  /**\r\n  * @dev Release a part of the frozen token(totalSupply - releasedSupply) every 26 weeks.\r\n  * @return An uint256 representing the amount.\r\n  */\r\n  function release() public whenNotPaused returns(uint256 _releaseAmount) {\r\n    require(nextReleaseTime <= now);\r\n\r\n    uint256 releaseAmount = 0;\r\n    uint256 remainderAmount = totalSupply.sub(releasedSupply);\r\n    if (remainderAmount > 0) {\r\n      releaseAmount = standardDecimals.mul(nextReleaseAmount);\r\n      if (releaseAmount > remainderAmount)\r\n        releaseAmount = remainderAmount;\r\n      releasedSupply = releasedSupply.add(releaseAmount);\r\n      balances[owner] = balances[owner].add(releaseAmount);\r\n      emit Release(msg.sender, releaseAmount, nextReleaseTime);\r\n      nextReleaseTime = nextReleaseTime.add(26 * 1 weeks);\r\n      nextReleaseAmount = nextReleaseAmount.sub(nextReleaseAmount.div(4));\r\n    }\r\n    return releaseAmount;\r\n  }\r\n\r\n  event Release(address receiver, uint256 amount, uint256 releaseTime);\r\n}\r\n\r\ncontract N2Contract is ReleaseableToken {\r\n  string public name = 'N2Chain';\r\n  string public symbol = 'N2C';\r\n  uint8 public decimals = 4;\r\n\r\n  // Set in case the core contract is broken and an upgrade is required\r\n  address public newContractAddress;\r\n\r\n  function N2Contract() public ReleaseableToken(1000000000, 200000000, 200000000) {}\r\n\r\n  /// @dev Used to mark the smart contract as upgraded, in case there is a serious\r\n  ///  breaking bug. This method does nothing but keep track of the new contract and\r\n  ///  emit a message indicating that the new address is set. It's up to clients of this\r\n  ///  contract to update to the new contract address in that case. (This contract will\r\n  ///  be paused indefinitely if such an upgrade takes place.)\r\n  /// @param _v2Address new address\r\n  function setNewAddress(address _v2Address) external onlyOwner whenPaused {\r\n    newContractAddress = _v2Address;\r\n    emit ContractUpgrade(_v2Address);\r\n  }\r\n\r\n  /// @dev Override unpause so it requires all external contract addresses\r\n  ///  to be set before contract can be unpaused. Also, we can't have\r\n  ///  newContractAddress set either, because then the contract was upgraded.\r\n  /// @notice This is public rather than external so we can call super.unpause\r\n  ///  without using an expensive CALL.\r\n  function unpause() public onlyOwner whenPaused {\r\n    require(newContractAddress == address(0));\r\n\r\n    // Actually unpause the contract.\r\n    super.unpause();\r\n  }\r\n}",
    "data_type": "ERC20",
    "id": "N2Contract_0x8b69f58be5d02ddc832384ef930bfad2f9223719",
    "file": "./Contract_source_Code/N2Contract_0x8b69f58be5d02ddc832384ef930bfad2f9223719.sol"
}