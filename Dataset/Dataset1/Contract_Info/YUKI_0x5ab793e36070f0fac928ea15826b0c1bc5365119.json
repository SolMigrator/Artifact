{
    "name": "YUKI",
    "address": "0x5ab793e36070f0fac928ea15826b0c1bc5365119",
    "Compiler Version": "v0.4.23+commit.124ca40d",
    "Optimization Enabled": "Yes with 200 runs",
    "Other Settings": "default evmVersion",
    "creation_bytecode": "",
    "abi": [
        {
            "constant": true,
            "inputs": [],
            "name": "codeSize",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "mintingFinished",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "_name",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_spender",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "name": "success",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "_totalSupply",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_from",
                    "type": "address"
                },
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "name": "success",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "organization",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_authority",
                    "type": "address"
                }
            ],
            "name": "addAuthority",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "incentiveForHolder",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "canRenounce",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "name": "_decimals",
                    "type": "uint8"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "cannotSendUntil",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "cannotReceiveUntil",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_unitAmount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "cannotReceive",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_from",
                    "type": "address"
                },
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "transferFromTo",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "targets",
                    "type": "address[]"
                },
                {
                    "name": "_cannotSendUntil",
                    "type": "uint256"
                },
                {
                    "name": "_cannotReceiveUntil",
                    "type": "uint256"
                }
            ],
            "name": "lockupAccounts",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "finishMinting",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "addresses",
                    "type": "address[]"
                },
                {
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "batchTransfer",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "addresses",
                    "type": "address[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]"
                }
            ],
            "name": "batchTransfer",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "marketingFunds",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "authorities",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "_symbol",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "initialMarketSales",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_from",
                    "type": "address"
                },
                {
                    "name": "_unitAmount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "targets",
                    "type": "address[]"
                },
                {
                    "name": "_cannotSend",
                    "type": "bool"
                },
                {
                    "name": "_cannotReceive",
                    "type": "bool"
                }
            ],
            "name": "freezeAccounts",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "cannotSend",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "name": "success",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_from",
                    "type": "address"
                },
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                },
                {
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "transferFromTo",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                },
                {
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "name": "success",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "from_",
                    "type": "address"
                },
                {
                    "name": "value_",
                    "type": "uint256"
                },
                {
                    "name": "data_",
                    "type": "bytes"
                }
            ],
            "name": "tokenFallback",
            "outputs": [],
            "payable": false,
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_codeSize",
                    "type": "uint256"
                }
            ],
            "name": "setCodeSize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_authority",
                    "type": "address"
                }
            ],
            "name": "removeAuthority",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "enableRenounceOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_owner",
                    "type": "address"
                },
                {
                    "name": "_spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "name": "remaining",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "developmentFunds",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "target",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "cannotSend",
                    "type": "bool"
                },
                {
                    "indexed": false,
                    "name": "cannotReceive",
                    "type": "bool"
                }
            ],
            "name": "FrozenFunds",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "target",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "cannotSendUntil",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "cannotReceiveUntil",
                    "type": "uint256"
                }
            ],
            "name": "LockedFunds",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "Burn",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "Mint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "MintFinished",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "authority",
                    "type": "address"
                }
            ],
            "name": "AuthorityAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "authority",
                    "type": "address"
                }
            ],
            "name": "AuthorityRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "_from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "_to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "indexed": true,
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "_owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "_spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        }
    ],
    "deployed_bytecode": "0x6080604052600436106102035763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630434a44d811461020857806305d2035b1461022f57806306fdde0314610258578063095ea7b3146102e257806318160ddd1461030657806323b872dd1461031b57806323bd4d7a1461034557806326defa73146103765780632816bd781461039957806330231ea4146103ae578063313ce567146103c35780633794aaff146103ee578063386bc2d01461040f5780633f4ba83a1461043057806340c10f19146104455780634e6c2a7e14610469578063579952fc1461048a5780635c975abb146104b45780635d06a05c146104c957806370a08231146105275780637d64bcb41461054857806383f12fec1461055d5780638456cb59146105b457806388d695b2146105c95780638cc63bfb146106575780638da5cb5b1461066c57806391223d691461068157806395d89b41146106a25780639d636359146106b75780639dc29fac146106cc578063a4055f62146106f0578063a80fe42c1461074e578063a9059cbb1461076f578063b4ad6b5b14610793578063be45fd6214610802578063c0ee0b8a1461086b578063d4caf2a41461089c578063d544e010146108b4578063d5c4098d146108d5578063dd62ed3e146108ea578063f2fde38b14610911578063f92a9de514610932575b600080fd5b34801561021457600080fd5b5061021d610947565b60408051918252519081900360200190f35b34801561023b57600080fd5b5061024461094d565b604080519115158252519081900360200190f35b34801561026457600080fd5b5061026d610956565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102a757818101518382015260200161028f565b50505050905090810190601f1680156102d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102ee57600080fd5b50610244600160a060020a03600435166024356109ec565b34801561031257600080fd5b5061021d610a57565b34801561032757600080fd5b50610244600160a060020a0360043581169060243516604435610a5d565b34801561035157600080fd5b5061035a610c7b565b60408051600160a060020a039092168252519081900360200190f35b34801561038257600080fd5b50610397600160a060020a0360043516610c8a565b005b3480156103a557600080fd5b5061035a610cf1565b3480156103ba57600080fd5b50610244610d00565b3480156103cf57600080fd5b506103d8610d21565b6040805160ff9092168252519081900360200190f35b3480156103fa57600080fd5b5061021d600160a060020a0360043516610d2a565b34801561041b57600080fd5b5061021d600160a060020a0360043516610d3c565b34801561043c57600080fd5b50610397610d4e565b34801561045157600080fd5b50610244600160a060020a0360043516602435610daf565b34801561047557600080fd5b50610244600160a060020a0360043516610eb3565b34801561049657600080fd5b50610244600160a060020a0360043581169060243516604435610ec8565b3480156104c057600080fd5b50610244610f23565b3480156104d557600080fd5b506040805160206004803580820135838102808601850190965280855261039795369593946024949385019291829185019084908082843750949750508435955050506020909201359150610f2c9050565b34801561053357600080fd5b5061021d600160a060020a03600435166110dd565b34801561055457600080fd5b506102446110f8565b34801561056957600080fd5b50604080516020600480358082013583810280860185019096528085526102449536959394602494938501929182918501908490808284375094975050933594506111629350505050565b3480156105c057600080fd5b50610397611414565b3480156105d557600080fd5b506040805160206004803580820135838102808601850190965280855261024495369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506114779650505050505050565b34801561066357600080fd5b5061035a611745565b34801561067857600080fd5b5061035a611754565b34801561068d57600080fd5b50610244600160a060020a0360043516611763565b3480156106ae57600080fd5b5061026d611778565b3480156106c357600080fd5b5061035a6117d9565b3480156106d857600080fd5b50610397600160a060020a03600435166024356117ed565b3480156106fc57600080fd5b5060408051602060048035808201358381028086018501909652808552610397953695939460249493850192918291850190849080828437509497505050508235151593505050602001351515611905565b34801561075a57600080fd5b50610244600160a060020a0360043516611a47565b34801561077b57600080fd5b50610244600160a060020a0360043516602435611a5c565b34801561079f57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261024494600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750611b439650505050505050565b34801561080e57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610244948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750611ea09650505050505050565b34801561087757600080fd5b5061039760048035600160a060020a0316906024803591604435918201910135610203565b3480156108a857600080fd5b50610397600435611f7d565b3480156108c057600080fd5b50610397600160a060020a0360043516611f9d565b3480156108e157600080fd5b50610397612001565b3480156108f657600080fd5b5061021d600160a060020a0360043581169060243516612053565b34801561091d57600080fd5b50610397600160a060020a036004351661207e565b34801561093e57600080fd5b5061035a61213b565b60085481565b60095460ff1681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109e25780601f106109b7576101008083540402835291602001916109e2565b820191906000526020600020905b8154815290600101906020018083116109c557829003601f168201915b5050505050905090565b600160a060020a033381166000818152600f6020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075490565b60035460009060ff1615610a7057600080fd5b600160a060020a03831615801590610a885750600082115b8015610aac5750600160a060020a0384166000908152600e60205260409020548211155b8015610ade5750600160a060020a038085166000908152600f6020908152604080832033909416835292905220548211155b8015610b035750600160a060020a03331660009081526010602052604090205460ff16155b8015610b285750600160a060020a03831660009081526011602052604090205460ff16155b8015610b4b5750600160a060020a03331660009081526012602052604090205442115b8015610b6e5750600160a060020a03831660009081526013602052604090205442115b1515610b7957600080fd5b600160a060020a0384166000908152600e6020526040902054610ba2908363ffffffff61214a16565b600160a060020a038086166000908152600e60205260408082209390935590851681522054610bd7908363ffffffff61215c16565b600160a060020a038085166000908152600e60209081526040808320949094558783168252600f8152838220339093168252919091522054610c1f908363ffffffff61214a16565b600160a060020a038086166000818152600f6020908152604080832033861684528252918290209490945580518681529051928716939192600080516020612596833981519152929181900390910190a35060015b9392505050565b600d54600160a060020a031681565b60015433600160a060020a03908116911614610ca557600080fd5b600160a060020a038116600081815260026020526040808220805460ff19166001179055517f550a8ae64ec9d6640b6f168a26d3e6364b90defe8110c92135aa775b279e54ea9190a250565b600a54600160a060020a031681565b60015474010000000000000000000000000000000000000000900460ff1681565b60065460ff1690565b60126020526000908152604090205481565b60136020526000908152604090205481565b60015433600160a060020a03908116911614610d6957600080fd5b60035460ff161515610d7a57600080fd5b6003805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60015460009033600160a060020a03908116911614610dcd57600080fd5b60095460ff1615610ddd57600080fd5b60008211610dea57600080fd5b600754610dfd908363ffffffff61215c16565b600755600160a060020a0383166000908152600e6020526040902054610e29908363ffffffff61215c16565b600160a060020a0384166000818152600e6020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000916000805160206125968339815191529181900360200190a350600192915050565b60116020526000908152604090205460ff1681565b60015460009060609033600160a060020a0390811691161480610f035750600160a060020a03331660009081526002602052604090205460ff165b1515610f0e57600080fd5b610f1a85858584611b43565b95945050505050565b60035460ff1681565b60015460009033600160a060020a03908116911614610f4a57600080fd5b8351600010610f5857600080fd5b5060005b83518110156110d75782601260008684815181101515610f7857fe5b90602001906020020151600160a060020a0316600160a060020a031681526020019081526020016000205411158015610fed575081601360008684815181101515610fbf57fe5b90602001906020020151600160a060020a0316600160a060020a031681526020019081526020016000205411155b1515610ff857600080fd5b8260126000868481518110151561100b57fe5b90602001906020020151600160a060020a0316600160a060020a03168152602001908152602001600020819055508160136000868481518110151561104c57fe5b6020908102909101810151600160a060020a0316825281019190915260400160002055835184908290811061107d57fe5b90602001906020020151600160a060020a03167fc61053a33abb5e94c106d3f21e6e5a7cb1d1160b62109c4207797749de780c298484604051808381526020018281526020019250505060405180910390a2600101610f5c565b50505050565b600160a060020a03166000908152600e602052604090205490565b60015460009033600160a060020a0390811691161461111657600080fd5b60095460ff161561112657600080fd5b6009805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b6003546000908190819060ff161561117957600080fd5b60008411801561118a575060008551115b80156111af5750600160a060020a03331660009081526010602052604090205460ff16155b80156111d25750600160a060020a03331660009081526012602052604090205442115b15156111dd57600080fd5b6111f1846305f5e10063ffffffff61216916565b935061120785518561216990919063ffffffff16565b600160a060020a0333166000908152600e602052604090205490925082111561122f57600080fd5b5060005b84518110156113c757845160009086908390811061124d57fe5b90602001906020020151600160a060020a0316141580156112a3575060116000868381518110151561127b57fe5b6020908102909101810151600160a060020a031682528101919091526040016000205460ff16155b80156112ea57506013600086838151811015156112bc57fe5b90602001906020020151600160a060020a0316600160a060020a031681526020019081526020016000205442115b15156112f557600080fd5b61133a84600e6000888581518110151561130b57fe5b6020908102909101810151600160a060020a03168252810191909152604001600020549063ffffffff61215c16565b600e6000878481518110151561134c57fe5b6020908102909101810151600160a060020a0316825281019190915260400160002055845185908290811061137d57fe5b90602001906020020151600160a060020a031633600160a060020a0316600080516020612596833981519152866040518082815260200191505060405180910390a3600101611233565b600160a060020a0333166000908152600e60205260409020546113f0908363ffffffff61214a16565b33600160a060020a03166000908152600e6020526040902055506001949350505050565b60015433600160a060020a0390811691161461142f57600080fd5b60035460ff161561143f57600080fd5b6003805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b6003546000908190819060ff161561148e57600080fd5b600085511180156114a0575083518551145b80156114c55750600160a060020a03331660009081526010602052604090205460ff16155b80156114e85750600160a060020a03331660009081526012602052604090205442115b15156114f357600080fd5b5060009050805b8451811015611720576000848281518110151561151357fe5b9060200190602002015111801561154c5750845160009086908390811061153657fe5b90602001906020020151600160a060020a031614155b801561158d575060116000868381518110151561156557fe5b6020908102909101810151600160a060020a031682528101919091526040016000205460ff16155b80156115d457506013600086838151811015156115a657fe5b90602001906020020151600160a060020a0316600160a060020a031681526020019081526020016000205442115b15156115df57600080fd5b61160b6305f5e10085838151811015156115f557fe5b602090810290910101519063ffffffff61216916565b848281518110151561161957fe5b6020908102909101015283516116519085908390811061163557fe5b90602001906020020151600e6000888581518110151561130b57fe5b600e6000878481518110151561166357fe5b6020908102909101810151600160a060020a031682528101919091526040016000205583516116af9085908390811061169857fe5b60209081029091010151839063ffffffff61215c16565b915084818151811015156116bf57fe5b90602001906020020151600160a060020a031633600160a060020a031660008051602061259683398151915286848151811015156116f957fe5b906020019060200201516040518082815260200191505060405180910390a36001016114fa565b600160a060020a0333166000908152600e60205260409020548211156113c757600080fd5b600c54600160a060020a031681565b600154600160a060020a031681565b60026020526000908152604090205460ff1681565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109e25780601f106109b7576101008083540402835291602001916109e2565b6009546101009004600160a060020a031681565b60015433600160a060020a0390811691161461180857600080fd5b6000811180156118305750600160a060020a0382166000908152600e60205260409020548111155b151561183b57600080fd5b600160a060020a0382166000908152600e6020526040902054611864908263ffffffff61214a16565b600160a060020a0383166000908152600e6020526040902055600754611890908263ffffffff61214a16565b600755604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206125968339815191529181900360200190a35050565b60015460009033600160a060020a0390811691161461192357600080fd5b835160001061193157600080fd5b5060005b83518110156110d7578260106000868481518110151561195157fe5b90602001906020020151600160a060020a0316600160a060020a0316815260200190815260200160002060006101000a81548160ff021916908315150217905550816011600086848151811015156119a557fe5b602090810291909101810151600160a060020a03168252810191909152604001600020805460ff191691151591909117905583518490829081106119e557fe5b90602001906020020151600160a060020a03167f59ef01fe78d3fc1c160166232974b181fec44779581bc204884bcd3e8201210d84846040518083151515158152602001821515151581526020019250505060405180910390a2600101611935565b60106020526000908152604090205460ff1681565b60035460009060609060ff1615611a7257600080fd5b600083118015611a9b5750600160a060020a03331660009081526010602052604090205460ff16155b8015611ac05750600160a060020a03841660009081526011602052604090205460ff16155b8015611ae35750600160a060020a03331660009081526012602052604090205442115b8015611b065750600160a060020a03841660009081526013602052604090205442115b1515611b1157600080fd5b611b1a84612192565b15611b3157611b2a84848361219b565b9150611b3c565b611b2a848483612403565b5092915050565b600154600090819033600160a060020a0390811691161480611b7d5750600160a060020a03331660009081526002602052604090205460ff165b1515611b8857600080fd5b600084118015611bb05750600160a060020a0386166000908152600e60205260409020548411155b8015611bd55750600160a060020a03861660009081526010602052604090205460ff16155b8015611bfa5750600160a060020a03851660009081526011602052604090205460ff16155b8015611c1d5750600160a060020a03861660009081526012602052604090205442115b8015611c405750600160a060020a03851660009081526013602052604090205442115b1515611c4b57600080fd5b600160a060020a0386166000908152600e6020526040902054611c74908563ffffffff61214a16565b600160a060020a038088166000908152600e60205260408082209390935590871681522054611ca9908563ffffffff61215c16565b600160a060020a0386166000908152600e6020526040902055611ccb85612192565b15611dc257506040517fc0ee0b8a000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483019081526024830186905260606044840190815285516064850152855188949385169363c0ee0b8a938b938a938a9360840190602085019080838360005b83811015611d5b578181015183820152602001611d43565b50505050905090810190601f168015611d885780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015611da957600080fd5b505af1158015611dbd573d6000803e3d6000fd5b505050505b826040518082805190602001908083835b60208310611df25780518252601f199092019160209182019101611dd3565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b811695508c16937fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c169350918290030190a484600160a060020a031686600160a060020a0316600080516020612596833981519152866040518082815260200191505060405180910390a350600195945050505050565b60035460009060ff1615611eb357600080fd5b600083118015611edc5750600160a060020a03331660009081526010602052604090205460ff16155b8015611f015750600160a060020a03841660009081526011602052604090205460ff16155b8015611f245750600160a060020a03331660009081526012602052604090205442115b8015611f475750600160a060020a03841660009081526013602052604090205442115b1515611f5257600080fd5b611f5b84612192565b15611f7257611f6b84848461219b565b9050610c74565b611f6b848484612403565b60015433600160a060020a03908116911614611f9857600080fd5b600855565b60015433600160a060020a03908116911614611fb857600080fd5b600160a060020a038116600081815260026020526040808220805460ff19169055517f272215cde179041f7a3e8da6f8aabc7c8fc1336ccd73aba698cb825a80d3be489190a250565b60015433600160a060020a0390811691161461201c57600080fd5b6001805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b600160a060020a039182166000908152600f6020908152604080832093909416825291909152205490565b60015433600160a060020a0390811691161461209957600080fd5b60015474010000000000000000000000000000000000000000900460ff1615156120d257600160a060020a03811615156120d257600080fd5b600154604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600b54600160a060020a031681565b60008282111561215657fe5b50900390565b81810182811015610a5157fe5b600082151561217a57506000610a51565b5081810281838281151561218a57fe5b0414610a5157fe5b600854903b1190565b600160a060020a0333166000908152600e602052604081205481908411156121c257600080fd5b600160a060020a0333166000908152600e60205260409020546121eb908563ffffffff61214a16565b600160a060020a033381166000908152600e60205260408082209390935590871681522054612220908563ffffffff61215c16565b600160a060020a038087166000818152600e602090815260408083209590955593517fc0ee0b8a0000000000000000000000000000000000000000000000000000000081523393841660048201908152602482018a90526060604483019081528951606484015289518c9850949663c0ee0b8a96958c958c9560840192860191908190849084905b838110156122c05781810151838201526020016122a8565b50505050905090810190601f1680156122ed5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561230e57600080fd5b505af1158015612322573d6000803e3d6000fd5b50505050826040518082805190602001908083835b602083106123565780518252601f199092019160209182019101612337565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b811695503316937fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c169350918290030190a484600160a060020a031633600160a060020a0316600080516020612596833981519152866040518082815260200191505060405180910390a3506001949350505050565b600160a060020a0333166000908152600e602052604081205483111561242857600080fd5b600160a060020a0333166000908152600e6020526040902054612451908463ffffffff61214a16565b600160a060020a033381166000908152600e60205260408082209390935590861681522054612486908463ffffffff61215c16565b600160a060020a0385166000908152600e60209081526040918290209290925551835184928291908401908083835b602083106124d45780518252601f1990920191602091820191016124b5565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208983529351939550600160a060020a038a811695503316937fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c169350918290030190a483600160a060020a031633600160a060020a0316600080516020612596833981519152856040518082815260200191505060405180910390a35060019392505050565b6000818381151561258d57fe5b0493925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820910b5495d9c9e5c89917ab65a85b3627cb3cf4a8e2c1cf9dac9b95d0e45b21c80029",
    "constructor_argument": "",
    "Contract Source Code": "/**\r\n *Submitted for verification at Etherscan.io on 2018-06-23\r\n*/\r\n\r\npragma solidity ^0.4.23;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    // uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return a / b;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address & authority addresses, and provides basic\r\n * authorization control functions, this simplifies the implementation of user permissions.\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n  bool public canRenounce = false;\r\n  mapping (address => bool) public authorities;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  event AuthorityAdded(address indexed authority);\r\n  event AuthorityRemoved(address indexed authority);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the authority or owner.\r\n   */\r\n  modifier onlyAuthority() {\r\n      require(msg.sender == owner || authorities[msg.sender]);\r\n      _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   */\r\n  function enableRenounceOwnership() onlyOwner public {\r\n    canRenounce = true;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) onlyOwner public {\r\n    if(!canRenounce){\r\n      require(_newOwner != address(0));\r\n    }\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n\r\n  /**\r\n   * @dev Adds authority to execute several functions to subOwner.\r\n   * @param _authority The address to add authority to.\r\n   */\r\n\r\n  function addAuthority(address _authority) onlyOwner public {\r\n    authorities[_authority] = true;\r\n    emit AuthorityAdded(_authority);\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Removes authority to execute several functions from subOwner.\r\n   * @param _authority The address to remove authority from.\r\n   */\r\n\r\n  function removeAuthority(address _authority) onlyOwner public {\r\n    authorities[_authority] = false;\r\n    emit AuthorityRemoved(_authority);\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title ERC223\r\n * @dev ERC223 contract interface with ERC20 functions and events\r\n *      Fully backward compatible with ERC20\r\n *      Recommended implementation used at https://github.com/Dexaran/ERC223-token-standard/tree/Recommended\r\n */\r\ncontract ERC223 {\r\n    uint public totalSupply;\r\n\r\n    // ERC223 and ERC20 functions and events\r\n    function name() public view returns (string _name);\r\n    function symbol() public view returns (string _symbol);\r\n    function decimals() public view returns (uint8 _decimals);\r\n    function balanceOf(address who) public view returns (uint);\r\n    function totalSupply() public view returns (uint256 _supply);\r\n    function transfer(address to, uint value) public returns (bool ok);\r\n    function transfer(address to, uint value, bytes data) public returns (bool ok);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Transfer(address indexed from, address indexed to, uint value, bytes indexed data);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title ContractReceiver\r\n * @dev Contract that is working with ERC223 tokens\r\n */\r\n contract ContractReceiver {\r\n/**\r\n * @dev Standard ERC223 function that will handle incoming token transfers.\r\n *\r\n * @param _from  Token sender address.\r\n * @param _value Amount of tokens.\r\n * @param _data  Transaction metadata.\r\n */\r\n    function tokenFallback(address _from, uint _value, bytes _data) external;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @title YUKI\r\n * @author YUKI_Hayate and NANJ_Shimokawa\r\n * @dev YUKI is an ERC223 Token with ERC20 functions and events\r\n *      Fully backward compatible with ERC20\r\n */\r\ncontract YUKI is ERC223, Ownable, Pausable {\r\n    using SafeMath for uint256;\r\n\r\n    string public name = \"YUKI\";\r\n    string public symbol = \"YUKI\";\r\n    uint8 public decimals = 8;\r\n    uint256 public totalSupply = 20e9 * 1e8;\r\n    uint256 public codeSize = 0;\r\n    bool public mintingFinished = false;\r\n\r\n    address public initialMarketSales = 0x1b879912446d844Fb5915bf4f773F0Db9Cd16ADb;\r\n    address public incentiveForHolder = 0x0908e3Df5Ed1E67D2AaF38401d4826B2879e8f4b;\r\n    address public developmentFunds = 0x52F018dc3dd621c8b2D649AC0e22E271a0dE049e;\r\n    address public marketingFunds = 0x6771a091C97c79a52c8DD5d98A59c5d3B27F99aA;\r\n    address public organization = 0xD90E1f987252b8EA71ac1cF14465FE9A3803267F;\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping (address => uint256)) public allowance;\r\n    mapping (address => bool) public cannotSend;\r\n    mapping (address => bool) public cannotReceive;\r\n    mapping (address => uint256) public cannotSendUntil;\r\n    mapping (address => uint256) public cannotReceiveUntil;\r\n\r\n    event FrozenFunds(address indexed target, bool cannotSend, bool cannotReceive);\r\n    event LockedFunds(address indexed target, uint256 cannotSendUntil, uint256 cannotReceiveUntil);\r\n    event Burn(address indexed from, uint256 amount);\r\n    event Mint(address indexed to, uint256 amount);\r\n    event MintFinished();\r\n\r\n    /**\r\n     * @dev Constructor is called only once and can not be called again\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n\r\n        balanceOf[initialMarketSales] = totalSupply.mul(45).div(100);\r\n        balanceOf[incentiveForHolder] = totalSupply.mul(5).div(100);\r\n        balanceOf[developmentFunds] = totalSupply.mul(20).div(100);\r\n        balanceOf[marketingFunds] = totalSupply.mul(175).div(1000);\r\n        balanceOf[organization] = totalSupply.mul(125).div(1000);\r\n    }\r\n\r\n    function name() public view returns (string _name) {\r\n        return name;\r\n    }\r\n\r\n    function symbol() public view returns (string _symbol) {\r\n        return symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8 _decimals) {\r\n        return decimals;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256 _totalSupply) {\r\n        return totalSupply;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balanceOf[_owner];\r\n    }\r\n    \r\n    /**\r\n     * @dev Prevent targets from sending or receiving tokens\r\n     * @param targets Addresses to be frozen\r\n     * @param _cannotSend Whether to prevent targets from sending tokens or not\r\n     * @param _cannotReceive Whether to prevent targets from receiving tokens or not\r\n     */\r\n    function freezeAccounts(address[] targets, bool _cannotSend, bool _cannotReceive) onlyOwner public {\r\n        require(targets.length > 0);\r\n\r\n        for (uint i = 0; i < targets.length; i++) {\r\n            cannotSend[targets[i]] = _cannotSend;\r\n            cannotReceive[targets[i]] = _cannotReceive;\r\n            emit FrozenFunds(targets[i], _cannotSend, _cannotReceive);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Prevent targets from sending or receiving tokens by setting Unix time\r\n     * @param targets Addresses to be locked funds\r\n     * @param _cannotSendUntil Unix time when locking up sending function will be finished\r\n     * @param _cannotReceiveUntil Unix time when locking up receiving function will be finished\r\n     */\r\n    function lockupAccounts(address[] targets, uint256 _cannotSendUntil, uint256 _cannotReceiveUntil) onlyOwner public {\r\n        require(targets.length > 0);\r\n\r\n        for(uint i = 0; i < targets.length; i++){\r\n            require(cannotSendUntil[targets[i]] <= _cannotSendUntil\r\n                    && cannotReceiveUntil[targets[i]] <= _cannotReceiveUntil);\r\n\r\n            cannotSendUntil[targets[i]] = _cannotSendUntil;\r\n            cannotReceiveUntil[targets[i]] = _cannotReceiveUntil;\r\n            emit LockedFunds(targets[i], _cannotSendUntil, _cannotReceiveUntil);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Function that is called when a user or another contract wants to transfer funds\r\n     */\r\n    function transfer(address _to, uint _value, bytes _data) whenNotPaused public returns (bool success) {\r\n        require(_value > 0\r\n                && cannotSend[msg.sender] == false\r\n                && cannotReceive[_to] == false\r\n                && now > cannotSendUntil[msg.sender]\r\n                && now > cannotReceiveUntil[_to]);\r\n\r\n        if (isContract(_to)) {\r\n            return transferToContract(_to, _value, _data);\r\n        } else {\r\n            return transferToAddress(_to, _value, _data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Standard function transfer similar to ERC20 transfer with no _data\r\n     *      Added due to backwards compatibility reasons\r\n     */\r\n    function transfer(address _to, uint _value) whenNotPaused public returns (bool success) {\r\n        require(_value > 0\r\n                && cannotSend[msg.sender] == false\r\n                && cannotReceive[_to] == false\r\n                && now > cannotSendUntil[msg.sender]\r\n                && now > cannotReceiveUntil[_to]);\r\n\r\n        bytes memory empty;\r\n        if (isContract(_to)) {\r\n            return transferToContract(_to, _value, empty);\r\n        } else {\r\n            return transferToAddress(_to, _value, empty);\r\n        }\r\n    }\r\n\r\n /**\r\n   * @dev Returns whether the target address is a contract\r\n   * @param _addr address to check\r\n   * @return whether the target address is a contract\r\n   */\r\n  function isContract(address _addr) internal view returns (bool) {\r\n    uint256 size;\r\n    // Currently there is no better way to check if there is a contract in an address\r\n    // than to check the size of the code at that address.\r\n    // See https://ethereum.stackexchange.com/a/14016/36603\r\n    // for more details about how this works.\r\n    // Check this again before the Serenity release, because all addresses will be\r\n    // contracts then.\r\n    // solium-disable-next-line security/no-inline-assembly\r\n    assembly { size := extcodesize(_addr) }\r\n    return size > codeSize ;\r\n  }\r\n\r\n    function setCodeSize(uint256 _codeSize) onlyOwner public {\r\n        codeSize = _codeSize;\r\n    }\r\n\r\n    // function that is called when transaction target is an address\r\n    function transferToAddress(address _to, uint _value, bytes _data) private returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value, _data);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    // function that is called when transaction target is a contract\r\n    function transferToContract(address _to, uint _value, bytes _data) private returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        ContractReceiver receiver = ContractReceiver(_to);\r\n        receiver.tokenFallback(msg.sender, _value, _data);\r\n        emit Transfer(msg.sender, _to, _value, _data);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer tokens from one address to another\r\n     *      Added due to backwards compatibility with ERC20\r\n     * @param _from address The address which you want to send tokens from\r\n     * @param _to address The address which you want to transfer to\r\n     * @param _value uint256 the amount of tokens to be transferred\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) whenNotPaused public returns (bool success) {\r\n        require(_to != address(0)\r\n                && _value > 0\r\n                && balanceOf[_from] >= _value\r\n                && allowance[_from][msg.sender] >= _value\r\n                && cannotSend[msg.sender] == false\r\n                && cannotReceive[_to] == false\r\n                && now > cannotSendUntil[msg.sender]\r\n                && now > cannotReceiveUntil[_to]);\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows _spender to spend no more than _value tokens in your behalf\r\n     *      Added due to backwards compatibility with ERC20\r\n     * @param _spender The address authorized to spend\r\n     * @param _value the max amount they can spend\r\n     */\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to check the amount of tokens that an owner allowed to a spender\r\n     *      Added due to backwards compatibility with ERC20\r\n     * @param _owner address The address which owns the funds\r\n     * @param _spender address The address which will spend the funds\r\n     */\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowance[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n     * @dev Burns a specific amount of tokens.\r\n     * @param _from The address that will burn the tokens.\r\n     * @param _unitAmount The amount of token to be burned.\r\n     */\r\n    function burn(address _from, uint256 _unitAmount) onlyOwner public {\r\n        require(_unitAmount > 0\r\n                && balanceOf[_from] >= _unitAmount);\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_unitAmount);\r\n        totalSupply = totalSupply.sub(_unitAmount);\r\n        emit Burn(_from, _unitAmount);\r\n        emit Transfer(_from, address(0), _unitAmount);\r\n\r\n    }\r\n    \r\n    modifier canMint() {\r\n        require(!mintingFinished);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to mint tokens\r\n     * @param _to The address that will receive the minted tokens.\r\n     * @param _unitAmount The amount of tokens to mint.\r\n     */\r\n    function mint(address _to, uint256 _unitAmount) onlyOwner canMint public returns (bool) {\r\n        require(_unitAmount > 0);\r\n\r\n        totalSupply = totalSupply.add(_unitAmount);\r\n        balanceOf[_to] = balanceOf[_to].add(_unitAmount);\r\n        emit Mint(_to, _unitAmount);\r\n        emit Transfer(address(0), _to, _unitAmount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to stop minting new tokens.\r\n     */\r\n    function finishMinting() onlyOwner canMint public returns (bool) {\r\n        mintingFinished = true;\r\n        emit MintFinished();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to distribute tokens to the list of addresses by the provided amount\r\n     */\r\n    function batchTransfer(address[] addresses, uint256 amount) whenNotPaused public returns (bool) {\r\n        require(amount > 0\r\n                && addresses.length > 0\r\n                && cannotSend[msg.sender] == false\r\n                && now > cannotSendUntil[msg.sender]);\r\n\r\n        amount = amount.mul(1e8);\r\n        uint256 totalAmount = amount.mul(addresses.length);\r\n        require(balanceOf[msg.sender] >= totalAmount);\r\n\r\n        for (uint i = 0; i < addresses.length; i++) {\r\n            require(addresses[i] != address(0)\r\n                    && cannotReceive[addresses[i]] == false\r\n                    && now > cannotReceiveUntil[addresses[i]]);\r\n\r\n            balanceOf[addresses[i]] = balanceOf[addresses[i]].add(amount);\r\n            emit Transfer(msg.sender, addresses[i], amount);\r\n        }\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(totalAmount);\r\n        return true;\r\n    }\r\n\r\n    function batchTransfer(address[] addresses, uint[] amounts) whenNotPaused public returns (bool) {\r\n        require(addresses.length > 0\r\n                && addresses.length == amounts.length\r\n                && cannotSend[msg.sender] == false\r\n                && now > cannotSendUntil[msg.sender]);\r\n\r\n        uint256 totalAmount = 0;\r\n\r\n        for(uint i = 0; i < addresses.length; i++){\r\n            require(amounts[i] > 0\r\n                    && addresses[i] != address(0)\r\n                    && cannotReceive[addresses[i]] == false\r\n                    && now > cannotReceiveUntil[addresses[i]]);\r\n\r\n            amounts[i] = amounts[i].mul(1e8);\r\n            balanceOf[addresses[i]] = balanceOf[addresses[i]].add(amounts[i]);\r\n            totalAmount = totalAmount.add(amounts[i]);\r\n            emit Transfer(msg.sender, addresses[i], amounts[i]);\r\n        }\r\n\r\n        require(balanceOf[msg.sender] >= totalAmount);\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(totalAmount);\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Function to transfer tokens between addresses, only for Owner & subOwner\r\n     */\r\n\r\n    function transferFromTo(address _from, address _to, uint256 _value, bytes _data) onlyAuthority public returns (bool) {\r\n        require(_value > 0\r\n                && balanceOf[_from] >= _value\r\n                && cannotSend[_from] == false\r\n                && cannotReceive[_to] == false\r\n                && now > cannotSendUntil[_from]\r\n                && now > cannotReceiveUntil[_to]);\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        if(isContract(_to)) {\r\n            ContractReceiver receiver = ContractReceiver(_to);\r\n            receiver.tokenFallback(_from, _value, _data);\r\n        }\r\n        emit Transfer(_from, _to, _value, _data);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFromTo(address _from, address _to, uint256 _value) onlyAuthority public returns (bool) {\r\n        bytes memory empty;\r\n        return transferFromTo(_from, _to, _value, empty);\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function\r\n     */\r\n    function() payable public {\r\n        revert();\r\n    }\r\n\r\n    /**\r\n     * @dev Reject all ERC223 compatible tokens\r\n     * @param from_ address The address that is transferring the tokens\r\n     * @param value_ uint256 the amount of the specified token\r\n     * @param data_ Bytes The data passed from the caller.\r\n     */\r\n    function tokenFallback(address from_, uint256 value_, bytes data_) external pure {\r\n        from_;\r\n        value_;\r\n        data_;\r\n        revert();\r\n    }\r\n}",
    "data_type": "ERC20",
    "id": "YUKI_0x5ab793e36070f0fac928ea15826b0c1bc5365119",
    "file": "./Contract_source_Code/YUKI_0x5ab793e36070f0fac928ea15826b0c1bc5365119.sol"
}