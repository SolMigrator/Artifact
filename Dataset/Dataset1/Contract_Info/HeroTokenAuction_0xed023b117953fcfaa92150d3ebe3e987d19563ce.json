{
    "name": "HeroTokenAuction",
    "address": "0xed023b117953fcfaa92150d3ebe3e987d19563ce",
    "Compiler Version": "v0.4.19+commit.c4cbbb05",
    "Optimization Enabled": "Yes with 200 runs",
    "Other Settings": "default evmVersion",
    "creation_bytecode": "60606040526002805460a060020a60ff0219169055341561001f57600080fd5b604051602080611c258339810160405280805160028054600160a060020a03191633600160a060020a031617905591503090508161271081111561006257600080fd5b60088054600160a060020a031916600160a060020a03939093169290921790915560095550611b8f806100966000396000f3006060604052600436106101925763ffffffff60e060020a60003504166306fdde038114610197578063095ea7b31461022157806314fbc22b1461024557806315e839c11461027957806318160ddd146102925780631b900c27146102a557806323b872dd146102d457806328b60031146102fc5780632a6dd48f1461031e5780633f4ba83a14610334578063431f21da14610347578063454a2ab314610366578063579e0b87146103715780635c975abb146103905780635fd8c710146103b75780636352211e146103ca57806370a08231146103e057806378bd7935146103ff57806383b5ff8b146104505780638456cb5914610463578063878eb368146104765780638da5cb5b1461048c57806395d89b411461049f57806396b5a755146104b2578063a540db73146104c8578063a8d4a03b146104de578063a9059cbb14610530578063b430da3c14610552578063b513318914610574578063c55d0f5614610587578063d63d4af01461059d578063dd1b7a0f1461060f578063ed047efd14610622578063f2fde38b14610641575b600080fd5b34156101a257600080fd5b6101aa610660565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101e65780820151838201526020016101ce565b50505050905090810190601f1680156102135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561022c57600080fd5b610243600160a060020a0360043516602435610697565b005b341561025057600080fd5b610267600435600160a060020a0360243516610712565b60405190815260200160405180910390f35b341561028457600080fd5b610243600435602435610775565b341561029d57600080fd5b610267610802565b34156102b057600080fd5b6102b8610809565b604051600160a060020a03909116815260200160405180910390f35b34156102df57600080fd5b610243600160a060020a0360043581169060243516604435610818565b341561030757600080fd5b610267600160a060020a0360043516602435610890565b341561032957600080fd5b6102b86004356108be565b341561033f57600080fd5b6102436108d9565b341561035257600080fd5b610243600435602435604435606435610958565b61024360043561098c565b341561037c57600080fd5b610243600160a060020a0360043516610a15565b341561039b57600080fd5b6103a3610a9d565b604051901515815260200160405180910390f35b34156103c257600080fd5b610243610aad565b34156103d557600080fd5b6102b8600435610b07565b34156103eb57600080fd5b610267600160a060020a0360043516610b46565b341561040a57600080fd5b610415600435610b61565b604051600160a060020a03909516855260208501939093526040808501929092526060840152608083019190915260a0909101905180910390f35b341561045b57600080fd5b610267610be1565b341561046e57600080fd5b610243610be7565b341561048157600080fd5b610243600435610c6b565b341561049757600080fd5b6102b8610cde565b34156104aa57600080fd5b6101aa610ced565b34156104bd57600080fd5b610243600435610d24565b34156104d357600080fd5b610243600435610d6d565b34156104e957600080fd5b6104f4600435610e5b565b60405167ffffffffffffffff948516815292909316602083015263ffffffff166040808301919091526060820192909252608001905180910390f35b341561053b57600080fd5b610243600160a060020a0360043516602435610eae565b341561055d57600080fd5b610243600435600160a060020a0360243516610f1b565b341561057f57600080fd5b6102b8610f5f565b341561059257600080fd5b610267600435610f6e565b34156105a857600080fd5b6105bc600160a060020a0360043516610f99565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156105fb5780820151838201526020016105e3565b505050509050019250505060405180910390f35b341561061a57600080fd5b6102b861101b565b341561062d57600080fd5b610243600160a060020a036004351661102a565b341561064c57600080fd5b610243600160a060020a03600435166110b2565b60408051908101604052600481527f4865726f00000000000000000000000000000000000000000000000000000000602082015281565b60025460a060020a900460ff16156106ae57600080fd5b6106b83382611140565b15156106c357600080fd5b6106cd8183611160565b8082600160a060020a031633600160a060020a03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60025460009033600160a060020a0390811691161480610740575060065433600160a060020a039081169116145b80610759575060075433600160a060020a039081169116145b151561076457600080fd5b61076e838361118e565b9392505050565b60025433600160a060020a03908116911614806107a0575060065433600160a060020a039081169116145b806107b9575060075433600160a060020a039081169116145b15156107c457600080fd5b816107cd610802565b81106107d857600080fd5b816001848154811015156107e857fe5b906000526020600020906002020160010181905550505050565b6001545b90565b600654600160a060020a031681565b60025460a060020a900460ff161561082f57600080fd5b600160a060020a038216151561084457600080fd5b60008181526004602052604090205433600160a060020a0390811691161461086b57600080fd5b6108758382611140565b151561088057600080fd5b61088b8383836112ce565b505050565b6000602052816000526040600020818154811015156108ab57fe5b6000918252602090912001549150829050565b600090815260046020526040902054600160a060020a031690565b60025433600160a060020a039081169116146108f457600080fd5b60025460a060020a900460ff16151561090c57600080fd5b6002805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60025460a060020a900460ff161561096f57600080fd5b6109798430611160565b6109868484848433611420565b50505050565b60025460a060020a900460ff16156109a357600080fd5b6109ad81346115ea565b50600854600160a060020a031663a9059cbb338360405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b1515610a0457600080fd5b6102c65a03f1151561098657600080fd5b60025433600160a060020a03908116911614610a3057600080fd5b600160a060020a0381161515610a4557600080fd5b80600160a060020a03167f867fbe6d3f29b605c4f7d8bd1d173f5d126812e9feff3bf9d0cea625c5e6873c60405160405180910390a260078054600160a060020a031916600160a060020a0392909216919091179055565b60025460a060020a900460ff1681565b60025433600160a060020a03908116911614610ac857600080fd5b33600160a060020a03166108fc30600160a060020a0316319081150290604051600060405180830381858888f193505050501515610b0557600080fd5b565b600081815260036020526040812054600160a060020a03161515610b2a57600080fd5b50600090815260036020526040902054600160a060020a031690565b600160a060020a031660009081526020819052604090205490565b6000818152600a602052604081208190819081908190610b8081611727565b1515610b8b57600080fd5b80546001820154600290920154600160a060020a03909116986001608060020a038084169950608060020a909304909216965067ffffffffffffffff808216965068010000000000000000909104169350915050565b60095481565b60025433600160a060020a03908116911614610c0257600080fd5b60025460a060020a900460ff1615610c1957600080fd5b6002805474ff0000000000000000000000000000000000000000191660a060020a1790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60025460009060a060020a900460ff161515610c8657600080fd5b60025433600160a060020a03908116911614610ca157600080fd5b506000818152600a60205260409020610cb981611727565b1515610cc457600080fd5b8054610cda908390600160a060020a0316611748565b5050565b600254600160a060020a031681565b60408051908101604052600481527f4845524f00000000000000000000000000000000000000000000000000000000602082015281565b6000818152600a6020526040812090610d3c82611727565b1515610d4757600080fd5b508054600160a060020a039081169033168114610d6357600080fd5b61088b8382611748565b60025460009033600160a060020a0390811691161480610d9b575060065433600160a060020a039081169116145b80610db4575060075433600160a060020a039081169116145b1515610dbf57600080fd5b81610dc8610802565b8110610dd357600080fd5b6001805484908110610de157fe5b60009182526020909120600290910201805463ffffffff608060020a67ffffffffffffffff421668010000000000000000026fffffffffffffffff00000000000000001990931692909217828104821660010190911690910273ffffffff0000000000000000000000000000000019909116179055505050565b6001805482908110610e6957fe5b60009182526020909120600290910201805460019091015467ffffffffffffffff80831693506801000000000000000083041691608060020a900463ffffffff169084565b60025460a060020a900460ff1615610ec557600080fd5b600160a060020a0382161515610eda57600080fd5b30600160a060020a031682600160a060020a031614151515610efb57600080fd5b610f053382611140565b1515610f1057600080fd5b610cda3383836112ce565b635aa3f2f042108015610f4a57507347169f78750be1e6ec2deb2974458ac4f8751714600160a060020a033216145b1515610f5557600080fd5b61088b828261118e565b600754600160a060020a031681565b6000818152600a60205260408120610f8581611727565b1515610f9057600080fd5b61076e816117fd565b610fa1611a8a565b60008083600160a060020a0316600160a060020a0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561100f57602002820191906000526020600020905b815481526020019060010190808311610ffb575b50505050509050919050565b600854600160a060020a031681565b60025433600160a060020a0390811691161461104557600080fd5b600160a060020a038116151561105a57600080fd5b80600160a060020a03167f867fbe6d3f29b605c4f7d8bd1d173f5d126812e9feff3bf9d0cea625c5e6873c60405160405180910390a260068054600160a060020a031916600160a060020a0392909216919091179055565b60025433600160a060020a039081169116146110cd57600080fd5b600160a060020a03811615156110e257600080fd5b600254600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360028054600160a060020a031916600160a060020a0392909216919091179055565b600090815260036020526040902054600160a060020a0391821691161490565b6000918252600460205260409091208054600160a060020a031916600160a060020a03909216919091179055565b600080600180548060010182816111a59190611a9c565b916000526020600020906002020160006080604051908101604090815267ffffffffffffffff4216825260006020830181905290820152606081018890529190508151815467ffffffffffffffff191667ffffffffffffffff919091161781556020820151815467ffffffffffffffff9190911668010000000000000000026fffffffffffffffff0000000000000000199091161781556040820151815463ffffffff91909116608060020a0273ffffffff00000000000000000000000000000000199091161781556060820151600191820155546000190192505050600160a060020a0383167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f828660405191825260208201526040908101905180910390a261076e600084835b60008080600160a060020a0386161561137457600160a060020a038616600090815260208181526040808320878452600590925290912054815491945092508390600019810190811061131d57fe5b60009182526020909120015490508381146113625780838381548110151561134157fe5b60009182526020808320909101929092558281526005909152604090208290555b8254611372846000198301611ac8565b505b60008481526003602090815260408083208054600160a060020a031916600160a060020a038a1690811790915580845283835281842080548986526005855292852083905590845292909152600181016113ce8382611ac8565b50600091825260209091200184905583600160a060020a038087169088167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b611428611aec565b6001608060020a038516851461143d57600080fd5b6001608060020a038416841461145257600080fd5b67ffffffffffffffff8316831461146857600080fd5b600854600160a060020a033381169116636352211e8860006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b15156114bd57600080fd5b6102c65a03f115156114ce57600080fd5b50505060405180519050600160a060020a03161415156114ed57600080fd5b838510156114fa57600080fd5b603c83101561150857600080fd5b600854600160a060020a03166323b872dd33308960405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b151561156b57600080fd5b6102c65a03f1151561157c57600080fd5b50505060a06040519081016040528083600160a060020a03168152602001866001608060020a03168152602001856001608060020a031681526020018467ffffffffffffffff1681526020014267ffffffffffffffff1681525090506115e286826118da565b505050505050565b6000828152600a60205260408120818080808061160686611727565b151561161157600080fd5b61161a866117fd565b94508488101561162957600080fd5b8554600160a060020a0316935061163f89611a4a565b600085111561168a576009546127109086020492508285039150600160a060020a03841682156108fc0283604051600060405180830381858888f19350505050151561168a57600080fd5b50838703600160a060020a03331681156108fc0282604051600060405180830381858888f1935050505015156116bf57600080fd5b8884600160a060020a03167f0215b1a2a67a9495dcda48e77d221375e38567831bdbbfede476ab34fcf8b24c4288336040519283526020830191909152600160a060020a03166040808301919091526060909101905180910390a35092979650505050505050565b6002015460006801000000000000000090910467ffffffffffffffff161190565b61175182611a4a565b600854600160a060020a031663a9059cbb828460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b15156117a757600080fd5b6102c65a03f115156117b857600080fd5b5050508181600160a060020a03167f6a3d5a07d548e27ae884a742682e9b929c0a0e4040990bc28c04637c5c0771044260405190815260200160405180910390a35050565b6002810154600090819081908190819068010000000000000000900467ffffffffffffffff1642111561184a57600286015468010000000000000000900467ffffffffffffffff16420393505b600286015467ffffffffffffffff16841061187b576001860154608060020a90046001608060020a031694506118d1565b600186015460028701546001608060020a03808316608060020a9093041691909103935067ffffffffffffffff168484028115156118b557fe5b60018801546001608060020a0316919005908101955091508490505b50505050919050565b6000828152600a60205260409020819081518154600160a060020a031916600160a060020a039190911617815560208201516001820180546fffffffffffffffffffffffffffffffff19166001608060020a039290921691909117905560408201516001820180546001608060020a03928316608060020a029216919091179055606082015160028201805467ffffffffffffffff191667ffffffffffffffff9290921691909117905560808201516002909101805467ffffffffffffffff9290921668010000000000000000026fffffffffffffffff00000000000000001990921691909117905550818151600160a060020a03167e09646912aaa7019ad837e57cc5c0613299c8432f5268d4450ab8673fe0fa034284602001518560400151866060015160405180858152602001846001608060020a03168152602001836001608060020a031681526020018267ffffffffffffffff16815260200194505050505060405180910390a35050565b6000908152600a602052604081208054600160a060020a0319168155600181019190915560020180546fffffffffffffffffffffffffffffffff19169055565b60206040519081016040526000815290565b81548183558181151161088b5760020281600202836000526020600020918201910161088b9190611b1a565b81548183558181151161088b5760008381526020902061088b918101908301611b49565b60a0604051908101604090815260008083526020830181905290820181905260608201819052608082015290565b61080691905b80821115611b45578054600160a060020a031916815560006001820155600201611b20565b5090565b61080691905b80821115611b455760008155600101611b4f5600a165627a7a723058207e9038a0e73d7e2e17db249b8952cbc756a8f062d3c8f0b138e3ee5375b166ef0029",
    "abi": [
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_genes",
                    "type": "uint256"
                },
                {
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "createHero",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_id",
                    "type": "uint256"
                },
                {
                    "name": "_newGenes",
                    "type": "uint256"
                }
            ],
            "name": "setHeroGenes",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "anotherOwner1",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_from",
                    "type": "address"
                },
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "address"
                },
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "ownerTokens",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approvedFor",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_tokenId",
                    "type": "uint256"
                },
                {
                    "name": "_startingPrice",
                    "type": "uint256"
                },
                {
                    "name": "_endingPrice",
                    "type": "uint256"
                },
                {
                    "name": "_duration",
                    "type": "uint256"
                }
            ],
            "name": "createAuction",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "bid",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_anotherOwner",
                    "type": "address"
                }
            ],
            "name": "assignAnotherOwner2",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "withdrawBalance",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getAuction",
            "outputs": [
                {
                    "name": "seller",
                    "type": "address"
                },
                {
                    "name": "startingPrice",
                    "type": "uint256"
                },
                {
                    "name": "endingPrice",
                    "type": "uint256"
                },
                {
                    "name": "duration",
                    "type": "uint256"
                },
                {
                    "name": "startedAt",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "ownerCut",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "cancelAuctionWhenPaused",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "cancelAuction",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_id",
                    "type": "uint256"
                }
            ],
            "name": "triggerCooldown",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "heroes",
            "outputs": [
                {
                    "name": "creationTime",
                    "type": "uint64"
                },
                {
                    "name": "cooldownStartTime",
                    "type": "uint64"
                },
                {
                    "name": "cooldownIndex",
                    "type": "uint32"
                },
                {
                    "name": "genes",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_genes",
                    "type": "uint256"
                },
                {
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "migrateHero",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "anotherOwner2",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getCurrentPrice",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "getOwnerTokens",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "nonFungibleContract",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_anotherOwner",
                    "type": "address"
                }
            ],
            "name": "assignAnotherOwner1",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "_ownerCut",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "indexed": true,
                    "name": "seller",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "startingPrice",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "endingPrice",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "duration",
                    "type": "uint256"
                }
            ],
            "name": "AuctionCreated",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "indexed": true,
                    "name": "seller",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "totalPrice",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "winner",
                    "type": "address"
                }
            ],
            "name": "AuctionSuccessful",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "indexed": true,
                    "name": "seller",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "AuctionCancelled",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "newTokenId",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "name": "genes",
                    "type": "uint256"
                }
            ],
            "name": "Mint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "anotherOwner",
                    "type": "address"
                }
            ],
            "name": "AnotherOwnerAssigned",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        }
    ],
    "deployed_bytecode": "",
    "constructor_argument": "00000000000000000000000000000000000000000000000000000000000000b4",
    "Contract Source Code": "/**\r\n *Submitted for verification at Etherscan.io on 2018-03-10\r\n*/\r\n\r\npragma solidity ^0.4.19;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title JointOwnable\r\n * @dev Extension for the Ownable contract, where the owner can assign at most 2 other addresses\r\n *  to manage some functions of the contract, using the eitherOwner modifier.\r\n *  Note that onlyOwner modifier would still be accessible only for the original owner.\r\n */\r\ncontract JointOwnable is Ownable {\r\n\r\n  event AnotherOwnerAssigned(address indexed anotherOwner);\r\n\r\n  address public anotherOwner1;\r\n  address public anotherOwner2;\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner or anotherOwner.\r\n   */\r\n  modifier eitherOwner() {\r\n    require(msg.sender == owner || msg.sender == anotherOwner1 || msg.sender == anotherOwner2);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to assign another owner.\r\n   * @param _anotherOwner The address to another owner.\r\n   */\r\n  function assignAnotherOwner1(address _anotherOwner) onlyOwner public {\r\n    require(_anotherOwner != 0);\r\n    AnotherOwnerAssigned(_anotherOwner);\r\n    anotherOwner1 = _anotherOwner;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to assign another owner.\r\n   * @param _anotherOwner The address to another owner.\r\n   */\r\n  function assignAnotherOwner2(address _anotherOwner) onlyOwner public {\r\n    require(_anotherOwner != 0);\r\n    AnotherOwnerAssigned(_anotherOwner);\r\n    anotherOwner2 = _anotherOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    Unpause();\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title Interface for contracts conforming to ERC-721: Non-Fungible Tokens.\r\n */\r\ncontract ERC721 {\r\n\r\n    // Events\r\n    event Transfer(address indexed from, address indexed to, uint indexed tokenId);\r\n    event Approval(address indexed owner, address indexed approved, uint indexed tokenId);\r\n\r\n    // ERC20 compatible functions.\r\n    // function name() public constant returns (string);\r\n    // function symbol() public constant returns (string);\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address _owner) public view returns (uint);\r\n\r\n    // Functions that define ownership.\r\n    function ownerOf(uint _tokenId) external view returns (address);\r\n    function transfer(address _to, uint _tokenId) external;\r\n\r\n    // Approval related functions, mainly used in auction contracts.\r\n    function approve(address _to, uint _tokenId) external;\r\n    function approvedFor(uint _tokenId) external view returns (address);\r\n    function transferFrom(address _from, address _to, uint _tokenId) external;\r\n\r\n    /**\r\n     * @dev Each non-fungible token owner can own more than one token at one time.\r\n     * Because each token is referenced by its unique ID, however,\r\n     * it can get difficult to keep track of the individual tokens that a user may own.\r\n     * To do this, the contract keeps a record of the IDs of each token that each user owns.\r\n     */\r\n    mapping(address => uint[]) public ownerTokens;\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title The ERC-721 compliance token contract.\r\n */\r\ncontract ERC721Token is ERC721, Pausable {\r\n\r\n    /* ======== STATE VARIABLES ======== */\r\n\r\n    /**\r\n     * @dev A mapping from token IDs to the address that owns them.\r\n     */\r\n    mapping(uint => address) tokenIdToOwner;\r\n\r\n    /**\r\n     * @dev A mapping from token ids to an address that has been approved to call\r\n     *  transferFrom(). Each token can only have one approved address for transfer\r\n     *  at any time. A zero value means no approval is outstanding.\r\n     */\r\n    mapping (uint => address) tokenIdToApproved;\r\n\r\n    /**\r\n     * @dev A mapping from token ID to index of the ownerTokens' tokens list.\r\n     */\r\n    mapping(uint => uint) tokenIdToOwnerTokensIndex;\r\n\r\n\r\n    /* ======== PUBLIC/EXTERNAL FUNCTIONS ======== */\r\n\r\n    /**\r\n     * @dev Returns the number of tokens owned by a specific address.\r\n     * @param _owner The owner address to check.\r\n     */\r\n    function balanceOf(address _owner) public view returns (uint) {\r\n        return ownerTokens[_owner].length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address currently assigned ownership of a given token.\r\n     */\r\n    function ownerOf(uint _tokenId) external view returns (address) {\r\n        require(tokenIdToOwner[_tokenId] != address(0));\r\n\r\n        return tokenIdToOwner[_tokenId];\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the approved address of a given token.\r\n    */\r\n    function approvedFor(uint _tokenId) external view returns (address) {\r\n        return tokenIdToApproved[_tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Get an array of IDs of each token that an user owns.\r\n     */\r\n    function getOwnerTokens(address _owner) external view returns(uint[]) {\r\n        return ownerTokens[_owner];\r\n    }\r\n\r\n    /**\r\n     * @dev External function to transfers a token to another address.\r\n     * @param _to The address of the recipient, can be a user or contract.\r\n     * @param _tokenId The ID of the token to transfer.\r\n     */\r\n    function transfer(address _to, uint _tokenId) whenNotPaused external {\r\n        // Safety check to prevent against an unexpected 0x0 default.\r\n        require(_to != address(0));\r\n\r\n        // Disallow transfers to this contract to prevent accidental misuse.\r\n        require(_to != address(this));\r\n\r\n        // You can only send your own token.\r\n        require(_owns(msg.sender, _tokenId));\r\n\r\n        // Reassign ownership, clear pending approvals, emit Transfer event.\r\n        _transfer(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Grant another address the right to transfer a specific Kitty via\r\n     *  transferFrom(). This is the preferred flow for transfering NFTs to contracts.\r\n     * @param _to The address to be granted transfer approval. Pass address(0) to\r\n     *  clear all approvals.\r\n     * @param _tokenId The ID of the Kitty that can be transferred if this call succeeds.\r\n     */\r\n    function approve(address _to, uint _tokenId) whenNotPaused external {\r\n        // Only an owner can grant transfer approval.\r\n        require(_owns(msg.sender, _tokenId));\r\n\r\n        // Register the approval (replacing any previous approval).\r\n        _approve(_tokenId, _to);\r\n\r\n        // Emit approval event.\r\n        Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer a Kitty owned by another address, for which the calling address\r\n     *  has previously been granted transfer approval by the owner.\r\n     * @param _from The address that owns the Kitty to be transfered.\r\n     * @param _to The address that should take ownership of the Kitty. Can be any address,\r\n     *  including the caller.\r\n     * @param _tokenId The ID of the Kitty to be transferred.\r\n     */\r\n    function transferFrom(address _from, address _to, uint _tokenId) whenNotPaused external {\r\n        // Safety check to prevent against an unexpected 0x0 default.\r\n        require(_to != address(0));\r\n\r\n        // Check for approval and valid ownership\r\n        require(tokenIdToApproved[_tokenId] == msg.sender);\r\n        require(_owns(_from, _tokenId));\r\n\r\n        // Reassign ownership (also clears pending approvals and emits Transfer event).\r\n        _transfer(_from, _to, _tokenId);\r\n    }\r\n\r\n\r\n    /* ======== INTERNAL/PRIVATE FUNCTIONS ======== */\r\n\r\n    /**\r\n     * @dev Assigns ownership of a specific token to an address.\r\n     */\r\n    function _transfer(address _from, address _to, uint _tokenId) internal {\r\n        // Step 1: Remove token from _form address.\r\n        // When creating new token, _from is 0x0.\r\n        if (_from != address(0)) {\r\n            uint[] storage fromTokens = ownerTokens[_from];\r\n            uint tokenIndex = tokenIdToOwnerTokensIndex[_tokenId];\r\n\r\n            // Put the last token to the transferred token index and update its index in ownerTokensIndexes.\r\n            uint lastTokenId = fromTokens[fromTokens.length - 1];\r\n\r\n            // Do nothing if the transferring token is the last item.\r\n            if (_tokenId != lastTokenId) {\r\n                fromTokens[tokenIndex] = lastTokenId;\r\n                tokenIdToOwnerTokensIndex[lastTokenId] = tokenIndex;\r\n            }\r\n\r\n            fromTokens.length--;\r\n        }\r\n\r\n        // Step 2: Add token to _to address.\r\n        // Transfer ownership.\r\n        tokenIdToOwner[_tokenId] = _to;\r\n\r\n        // Add the _tokenId to ownerTokens[_to] and remember the index in ownerTokensIndexes.\r\n        tokenIdToOwnerTokensIndex[_tokenId] = ownerTokens[_to].length;\r\n        ownerTokens[_to].push(_tokenId);\r\n\r\n        // Emit the Transfer event.\r\n        Transfer(_from, _to, _tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Marks an address as being approved for transferFrom(), overwriting any previous\r\n     *  approval. Setting _approved to address(0) clears all transfer approval.\r\n     */\r\n    function _approve(uint _tokenId, address _approved) internal {\r\n        tokenIdToApproved[_tokenId] = _approved;\r\n    }\r\n\r\n\r\n    /* ======== MODIFIERS ======== */\r\n\r\n    /**\r\n     * @dev Throws if _dungeonId is not created yet.\r\n     */\r\n    modifier tokenExists(uint _tokenId) {\r\n        require(_tokenId < totalSupply());\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a given address is the current owner of a particular token.\r\n     * @param _claimant The address we are validating against.\r\n     * @param _tokenId Token ID\r\n     */\r\n    function _owns(address _claimant, uint _tokenId) internal view returns (bool) {\r\n        return tokenIdToOwner[_tokenId] == _claimant;\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract EDStructs {\r\n\r\n    /**\r\n     * @dev The main Dungeon struct. Every dungeon in the game is represented by this structure.\r\n     * A dungeon is consists of an unlimited number of floors for your heroes to challenge,\r\n     * the power level of a dungeon is encoded in the floorGenes. Some dungeons are in fact more \"challenging\" than others,\r\n     * the secret formula for that is left for user to find out.\r\n     *\r\n     * Each dungeon also has a \"training area\", heroes can perform trainings and upgrade their stat,\r\n     * and some dungeons are more effective in the training, which is also a secret formula!\r\n     *\r\n     * When player challenge or do training in a dungeon, the fee will be collected as the dungeon rewards,\r\n     * which will be rewarded to the player who successfully challenged the current floor.\r\n     *\r\n     * Each dungeon fits in fits into three 256-bit words.\r\n     */\r\n    struct Dungeon {\r\n\r\n        // Each dungeon has an ID which is the index in the storage array.\r\n\r\n        // The timestamp of the block when this dungeon is created.\r\n        uint32 creationTime;\r\n\r\n        // The status of the dungeon, each dungeon can have 5 status, namely:\r\n        // 0: Active | 1: Transport Only | 2: Challenge Only | 3: Train Only | 4: InActive\r\n        uint8 status;\r\n\r\n        // The dungeon's difficulty, the higher the difficulty,\r\n        // normally, the \"rarer\" the seedGenes, the higher the diffculty,\r\n        // and the higher the contribution fee it is to challenge, train, and transport to the dungeon,\r\n        // the formula for the contribution fee is in DungeonChallenge and DungeonTraining contracts.\r\n        // A dungeon's difficulty never change.\r\n        uint8 difficulty;\r\n\r\n        // The dungeon's capacity, maximum number of players allowed to stay on this dungeon.\r\n        // The capacity of the newbie dungeon (Holyland) is set at 0 (which is infinity).\r\n        // Using 16-bit unsigned integers can have a maximum of 65535 in capacity.\r\n        // A dungeon's capacity never change.\r\n        uint16 capacity;\r\n\r\n        // The current floor number, a dungeon is consists of an umlimited number of floors,\r\n        // when there is heroes successfully challenged a floor, the next floor will be\r\n        // automatically generated. Using 32-bit unsigned integer can have a maximum of 4 billion floors.\r\n        uint32 floorNumber;\r\n\r\n        // The timestamp of the block when the current floor is generated.\r\n        uint32 floorCreationTime;\r\n\r\n        // Current accumulated rewards, successful challenger will get a large proportion of it.\r\n        uint128 rewards;\r\n\r\n        // The seed genes of the dungeon, it is used as the base gene for first floor,\r\n        // some dungeons are rarer and some are more common, the exact details are,\r\n        // of course, top secret of the game!\r\n        // A dungeon's seedGenes never change.\r\n        uint seedGenes;\r\n\r\n        // The genes for current floor, it encodes the difficulty level of the current floor.\r\n        // We considered whether to store the entire array of genes for all floors, but\r\n        // in order to save some precious gas we're willing to sacrifice some functionalities with that.\r\n        uint floorGenes;\r\n\r\n    }\r\n\r\n    /**\r\n     * @dev The main Hero struct. Every hero in the game is represented by this structure.\r\n     */\r\n    struct Hero {\r\n\r\n        // Each hero has an ID which is the index in the storage array.\r\n\r\n        // The timestamp of the block when this dungeon is created.\r\n        uint64 creationTime;\r\n\r\n        // The timestamp of the block where a challenge is performed, used to calculate when a hero is allowed to engage in another challenge.\r\n        uint64 cooldownStartTime;\r\n\r\n        // Every time a hero challenge a dungeon, its cooldown index will be incremented by one.\r\n        uint32 cooldownIndex;\r\n\r\n        // The seed of the hero, the gene encodes the power level of the hero.\r\n        // This is another top secret of the game! Hero's gene can be upgraded via\r\n        // training in a dungeon.\r\n        uint genes;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract HeroTokenInterface is ERC721, EDStructs {\r\n\r\n    /**\r\n     * @dev Name of token.\r\n     */\r\n    string public constant name = \"Hero\";\r\n\r\n    /**\r\n     * @dev Symbol of token.\r\n     */\r\n    string public constant symbol = \"HERO\";\r\n\r\n    /**\r\n     * @dev An array containing the Hero struct, which contains all the heroes in existance.\r\n     *  The ID for each hero is the index of this array.\r\n     */\r\n    Hero[] public heroes;\r\n\r\n    /**\r\n     * @dev An external function that creates a new hero and stores it,\r\n     *  only contract owners can create new token.\r\n     *  method doesn't do any checking and should only be called when the\r\n     *  input data is known to be valid.\r\n     * @param _genes The gene of the new hero.\r\n     * @param _owner The inital owner of this hero.\r\n     * @return The hero ID of the new hero.\r\n     */\r\n    function createHero(uint _genes, address _owner) external returns (uint);\r\n\r\n    /**\r\n     * @dev The external function to set the hero genes by its ID,\r\n     *  only contract owners can alter hero state.\r\n     */\r\n    function setHeroGenes(uint _id, uint _newGenes) external;\r\n\r\n    /**\r\n     * @dev Set the cooldownStartTime for the given hero. Also increments the cooldownIndex.\r\n     */\r\n    function triggerCooldown(uint _id) external;\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title The ERC-721 compliance token contract for the Hero tokens.\r\n * @dev See the DungeonStructs contract to see the details of the Hero token data structure.\r\n */\r\ncontract HeroToken is HeroTokenInterface, ERC721Token, JointOwnable {\r\n\r\n\r\n    /* ======== EVENTS ======== */\r\n\r\n    /**\r\n     * @dev The Mint event is fired whenever a new hero is created.\r\n     */\r\n    event Mint(address indexed owner, uint newTokenId, uint genes);\r\n\r\n\r\n    /* ======== PUBLIC/EXTERNAL FUNCTIONS ======== */\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens currently in existence.\r\n     */\r\n    function totalSupply() public view returns (uint) {\r\n        return heroes.length;\r\n    }\r\n\r\n    /**\r\n     * @dev An external function that creates a new hero and stores it,\r\n     *  only contract owners can create new token.\r\n     *  method doesn't do any checking and should only be called when the\r\n     *  input data is known to be valid.\r\n     * @param _genes The gene of the new hero.\r\n     * @param _owner The inital owner of this hero.\r\n     * @return The hero ID of the new hero.\r\n     */\r\n    function createHero(uint _genes, address _owner) eitherOwner external returns (uint) {\r\n        return _createHero(_genes, _owner);\r\n    }\r\n\r\n    /**\r\n     * @dev The external function to set the hero genes by its ID,\r\n     *  only contract owners can alter hero state.\r\n     */\r\n    function setHeroGenes(uint _id, uint _newGenes) eitherOwner tokenExists(_id) external {\r\n        heroes[_id].genes = _newGenes;\r\n    }\r\n\r\n    /**\r\n     * @dev Set the cooldownStartTime for the given hero. Also increments the cooldownIndex.\r\n     */\r\n    function triggerCooldown(uint _id) eitherOwner tokenExists(_id) external {\r\n        Hero storage hero = heroes[_id];\r\n\r\n        hero.cooldownStartTime = uint64(now);\r\n        hero.cooldownIndex++;\r\n    }\r\n\r\n\r\n    /* ======== PRIVATE/INTERNAL FUNCTIONS ======== */\r\n\r\n    function _createHero(uint _genes, address _owner) private returns (uint) {\r\n        // ** STORAGE UPDATE **\r\n        // Create a new hero.\r\n        heroes.push(Hero(uint64(now), 0, 0, _genes));\r\n\r\n        // Token id is the index in the storage array.\r\n        uint newTokenId = heroes.length - 1;\r\n\r\n        // Emit the token mint event.\r\n        Mint(_owner, newTokenId, _genes);\r\n\r\n        // This will assign ownership, and also emit the Transfer event.\r\n        _transfer(0, _owner, newTokenId);\r\n\r\n        return newTokenId;\r\n    }\r\n\r\n\r\n    /* ======== MIGRATION FUNCTIONS ======== */\r\n\r\n\r\n    /**\r\n     * @dev Since the HeroToken contract is re-deployed due to optimization.\r\n     *  We need to migrate all heroes from Beta token contract to Version 1.\r\n     */\r\n    function migrateHero(uint _genes, address _owner) external {\r\n        // Migration will be finished before maintenance period ends, tx.origin is used within a short period only.\r\n        require(now < 1520694000 && tx.origin == 0x47169f78750Be1e6ec2DEb2974458ac4F8751714);\r\n\r\n        _createHero(_genes, _owner);\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title ERC721DutchAuction\r\n * @dev Dutch auction / Decreasing clock auction for ERC721 tokens.\r\n */\r\ncontract ERC721DutchAuction is Ownable, Pausable {\r\n\r\n    /* ======== STRUCTS/ENUMS ======== */\r\n\r\n    // Represents an auction of an ERC721 token.\r\n    struct Auction {\r\n\r\n        // Current owner of the ERC721 token.\r\n        address seller;\r\n\r\n        // Price (in wei) at beginning of auction.\r\n        uint128 startingPrice;\r\n\r\n        // Price (in wei) at end of auction.\r\n        uint128 endingPrice;\r\n\r\n        // Duration (in seconds) of auction.\r\n        uint64 duration;\r\n\r\n        // Time when auction started.\r\n        // NOTE: 0 if this auction has been concluded.\r\n        uint64 startedAt;\r\n\r\n    }\r\n\r\n\r\n    /* ======== CONTRACTS ======== */\r\n\r\n    // Reference to contract tracking ERC721 token ownership.\r\n    ERC721 public nonFungibleContract;\r\n\r\n\r\n    /* ======== STATE VARIABLES ======== */\r\n\r\n    // Cut owner takes on each auction, measured in basis points (1/100 of a percent).\r\n    // Values 0-10,000 map to 0%-100%\r\n    uint public ownerCut;\r\n\r\n    // Map from token ID to their corresponding auction.\r\n    mapping (uint => Auction) tokenIdToAuction;\r\n\r\n\r\n    /* ======== EVENTS ======== */\r\n\r\n    event AuctionCreated(uint timestamp, address indexed seller, uint indexed tokenId, uint startingPrice, uint endingPrice, uint duration);\r\n    event AuctionSuccessful(uint timestamp, address indexed seller, uint indexed tokenId, uint totalPrice, address winner);\r\n    event AuctionCancelled(uint timestamp, address indexed seller, uint indexed tokenId);\r\n\r\n    /**\r\n     * @dev Constructor creates a reference to the ERC721 token ownership contract and verifies the owner cut is in the valid range.\r\n     * @param _tokenAddress - address of a deployed contract implementing the Nonfungible Interface.\r\n     * @param _ownerCut - percent cut the owner takes on each auction, must be between 0-10,000.\r\n     */\r\n    function ERC721DutchAuction(address _tokenAddress, uint _ownerCut) public {\r\n        require(_ownerCut <= 10000);\r\n\r\n        nonFungibleContract = ERC721(_tokenAddress);\r\n        ownerCut = _ownerCut;\r\n    }\r\n\r\n\r\n    /* ======== PUBLIC/EXTERNAL FUNCTIONS ======== */\r\n\r\n    /**\r\n     * @dev Bids on an open auction, completing the auction and transferring\r\n     *  ownership of the token if enough Ether is supplied.\r\n     * @param _tokenId - ID of token to bid on.\r\n     */\r\n    function bid(uint _tokenId) whenNotPaused external payable {\r\n        // _bid will throw if the bid or funds transfer fails.\r\n        _bid(_tokenId, msg.value);\r\n\r\n        // Transfers the token owned by this contract to another address. It will throw if transfer fails.\r\n        nonFungibleContract.transfer(msg.sender, _tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Cancels an auction that hasn't been won yet. Returns the token to original owner.\r\n     * @notice This is a state-modifying function that can be called while the contract is paused.\r\n     * @param _tokenId - ID of token on auction\r\n     */\r\n    function cancelAuction(uint _tokenId) external {\r\n        Auction storage auction = tokenIdToAuction[_tokenId];\r\n        require(_isOnAuction(auction));\r\n\r\n        address seller = auction.seller;\r\n        require(msg.sender == seller);\r\n\r\n        _cancelAuction(_tokenId, seller);\r\n    }\r\n\r\n    /**\r\n     * @dev Cancels an auction when the contract is paused.\r\n     *  Only the owner may do this, and tokens are returned to\r\n     *  the seller. This should only be used in emergencies.\r\n     * @param _tokenId - ID of the token on auction to cancel.\r\n     */\r\n    function cancelAuctionWhenPaused(uint _tokenId) whenPaused onlyOwner external {\r\n        Auction storage auction = tokenIdToAuction[_tokenId];\r\n        require(_isOnAuction(auction));\r\n\r\n        _cancelAuction(_tokenId, auction.seller);\r\n    }\r\n\r\n    /**\r\n     * @dev Remove all Ether from the contract, which is the owner's cuts\r\n     *  as well as any Ether sent directly to the contract address.\r\n     */\r\n    function withdrawBalance() onlyOwner external {\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns auction info for an token on auction.\r\n     * @param _tokenId - ID of token on auction.\r\n     */\r\n    function getAuction(uint _tokenId) external view returns (\r\n        address seller,\r\n        uint startingPrice,\r\n        uint endingPrice,\r\n        uint duration,\r\n        uint startedAt\r\n    ) {\r\n        Auction storage auction = tokenIdToAuction[_tokenId];\r\n        require(_isOnAuction(auction));\r\n\r\n        return (\r\n            auction.seller,\r\n            auction.startingPrice,\r\n            auction.endingPrice,\r\n            auction.duration,\r\n            auction.startedAt\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current price of an auction.\r\n     * @param _tokenId - ID of the token price we are checking.\r\n     */\r\n    function getCurrentPrice(uint _tokenId) external view returns (uint) {\r\n        Auction storage auction = tokenIdToAuction[_tokenId];\r\n        require(_isOnAuction(auction));\r\n\r\n        return _computeCurrentPrice(auction);\r\n    }\r\n\r\n\r\n    /* ======== INTERNAL/PRIVATE FUNCTIONS ======== */\r\n\r\n    /**\r\n     * @dev Creates and begins a new auction. Perform all the checkings necessary.\r\n     * @param _tokenId - ID of token to auction, sender must be owner.\r\n     * @param _startingPrice - Price of item (in wei) at beginning of auction.\r\n     * @param _endingPrice - Price of item (in wei) at end of auction.\r\n     * @param _duration - Length of time to move between starting\r\n     *  price and ending price (in seconds).\r\n     * @param _seller - Seller, if not the message sender\r\n     */\r\n    function _createAuction(\r\n        uint _tokenId,\r\n        uint _startingPrice,\r\n        uint _endingPrice,\r\n        uint _duration,\r\n        address _seller\r\n    ) internal {\r\n        // Sanity check that no inputs overflow how many bits we've allocated to store them in the auction struct.\r\n        require(_startingPrice == uint(uint128(_startingPrice)));\r\n        require(_endingPrice == uint(uint128(_endingPrice)));\r\n        require(_duration == uint(uint64(_duration)));\r\n\r\n        // If the token is already on any auction, this will throw\r\n        // because it will be owned by the auction contract.\r\n        require(nonFungibleContract.ownerOf(_tokenId) == msg.sender);\r\n\r\n        // Throw if the _endingPrice is larger than _startingPrice.\r\n        require(_startingPrice >= _endingPrice);\r\n\r\n        // Require that all auctions have a duration of at least one minute.\r\n        require(_duration >= 1 minutes);\r\n\r\n        // Transfer the token from its owner to this contract. It will throw if transfer fails.\r\n        nonFungibleContract.transferFrom(msg.sender, this, _tokenId);\r\n\r\n        Auction memory auction = Auction(\r\n            _seller,\r\n            uint128(_startingPrice),\r\n            uint128(_endingPrice),\r\n            uint64(_duration),\r\n            uint64(now)\r\n        );\r\n\r\n        _addAuction(_tokenId, auction);\r\n    }\r\n\r\n    /**\r\n     * @dev Adds an auction to the list of open auctions. Also fires the\r\n     *  AuctionCreated event.\r\n     * @param _tokenId The ID of the token to be put on auction.\r\n     * @param _auction Auction to add.\r\n     */\r\n    function _addAuction(uint _tokenId, Auction _auction) internal {\r\n        tokenIdToAuction[_tokenId] = _auction;\r\n\r\n        AuctionCreated(\r\n            now,\r\n            _auction.seller,\r\n            _tokenId,\r\n            _auction.startingPrice,\r\n            _auction.endingPrice,\r\n            _auction.duration\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the price and transfers winnings.\r\n     *  Does NOT transfer ownership of token.\r\n     */\r\n    function _bid(uint _tokenId, uint _bidAmount) internal returns (uint) {\r\n        // Get a reference to the auction struct\r\n        Auction storage auction = tokenIdToAuction[_tokenId];\r\n\r\n        // Explicitly check that this auction is currently live.\r\n        // (Because of how Ethereum mappings work, we can't just count\r\n        // on the lookup above failing. An invalid _tokenId will just\r\n        // return an auction object that is all zeros.)\r\n        require(_isOnAuction(auction));\r\n\r\n        // Check that the bid is greater than or equal to the current price\r\n        uint price = _computeCurrentPrice(auction);\r\n        require(_bidAmount >= price);\r\n\r\n        // Grab a reference to the seller before the auction struct\r\n        // gets deleted.\r\n        address seller = auction.seller;\r\n\r\n        // The bid is good! Remove the auction before sending the fees\r\n        // to the sender so we can't have a reentrancy attack.\r\n        _removeAuction(_tokenId);\r\n\r\n        // Transfer proceeds to seller (if there are any!)\r\n        if (price > 0) {\r\n            // Calculate the auctioneer's cut.\r\n            uint auctioneerCut = price * ownerCut / 10000;\r\n            uint sellerProceeds = price - auctioneerCut;\r\n\r\n            seller.transfer(sellerProceeds);\r\n        }\r\n\r\n        // Calculate any excess funds included with the bid. If the excess\r\n        // is anything worth worrying about, transfer it back to bidder.\r\n        // NOTE: We checked above that the bid amount is greater than or\r\n        // equal to the price so this cannot underflow.\r\n        uint bidExcess = _bidAmount - price;\r\n\r\n        // Return the funds. Similar to the previous transfer, this is\r\n        // not susceptible to a re-entry attack because the auction is\r\n        // removed before any transfers occur.\r\n        msg.sender.transfer(bidExcess);\r\n\r\n        // Tell the world!\r\n        AuctionSuccessful(now, seller, _tokenId, price, msg.sender);\r\n\r\n        return price;\r\n    }\r\n\r\n    /**\r\n     * @dev Cancels an auction unconditionally.\r\n     */\r\n    function _cancelAuction(uint _tokenId, address _seller) internal {\r\n        _removeAuction(_tokenId);\r\n\r\n        // Transfers the token owned by this contract to its original owner. It will throw if transfer fails.\r\n        nonFungibleContract.transfer(_seller, _tokenId);\r\n\r\n        AuctionCancelled(now, _seller, _tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes an auction from the list of open auctions.\r\n     * @param _tokenId - ID of token on auction.\r\n     */\r\n    function _removeAuction(uint _tokenId) internal {\r\n        delete tokenIdToAuction[_tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns current price of an token on auction. Broken into two\r\n     *  functions (this one, that computes the duration from the auction\r\n     *  structure, and the other that does the price computation) so we\r\n     *  can easily test that the price computation works correctly.\r\n     */\r\n    function _computeCurrentPrice(Auction storage _auction) internal view returns (uint) {\r\n        uint secondsPassed = 0;\r\n\r\n        // A bit of insurance against negative values (or wraparound).\r\n        // Probably not necessary (since Ethereum guarnatees that the\r\n        // now variable doesn't ever go backwards).\r\n        if (now > _auction.startedAt) {\r\n            secondsPassed = now - _auction.startedAt;\r\n        }\r\n\r\n        if (secondsPassed >= _auction.duration) {\r\n            // We've reached the end of the dynamic pricing portion\r\n            // of the auction, just return the end price.\r\n            return _auction.endingPrice;\r\n        } else {\r\n            // Starting price can be higher than ending price (and often is!), so\r\n            // this delta can be negative.\r\n            int totalPriceChange = int(_auction.endingPrice) - int(_auction.startingPrice);\r\n\r\n            // This multiplication can't overflow, _secondsPassed will easily fit within\r\n            // 64-bits, and totalPriceChange will easily fit within 128-bits, their product\r\n            // will always fit within 256-bits.\r\n            int currentPriceChange = totalPriceChange * int(secondsPassed) / int(_auction.duration);\r\n\r\n            // currentPriceChange can be negative, but if so, will have a magnitude\r\n            // less that startingPrice. Thus, this result will always end up positive.\r\n            int currentPrice = int(_auction.startingPrice) + currentPriceChange;\r\n\r\n            return uint(currentPrice);\r\n        }\r\n    }\r\n\r\n\r\n    /* ======== MODIFIERS ======== */\r\n\r\n    /**\r\n     * @dev Returns true if the token is on auction.\r\n     * @param _auction - Auction to check.\r\n     */\r\n    function _isOnAuction(Auction storage _auction) internal view returns (bool) {\r\n        return (_auction.startedAt > 0);\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract HeroTokenAuction is HeroToken, ERC721DutchAuction {\r\n\r\n    function HeroTokenAuction(uint _ownerCut) ERC721DutchAuction(this, _ownerCut) public { }\r\n\r\n    /**\r\n     * @dev Creates and begins a new auction.\r\n     * @param _tokenId - ID of token to auction, sender must be owner.\r\n     * @param _startingPrice - Price of item (in wei) at beginning of auction.\r\n     * @param _endingPrice - Price of item (in wei) at end of auction.\r\n     * @param _duration - Length of time to move between starting price and ending price (in seconds).\r\n     */\r\n    function createAuction(\r\n        uint _tokenId,\r\n        uint _startingPrice,\r\n        uint _endingPrice,\r\n        uint _duration\r\n    ) whenNotPaused external {\r\n        _approve(_tokenId, this);\r\n\r\n        // This will perform all the checkings necessary.\r\n        _createAuction(_tokenId, _startingPrice, _endingPrice, _duration, msg.sender);\r\n    }\r\n\r\n}",
    "data_type": "ERC721",
    "id": "HeroTokenAuction_0xed023b117953fcfaa92150d3ebe3e987d19563ce",
    "file": "./Contract_source_Code/HeroTokenAuction_0xed023b117953fcfaa92150d3ebe3e987d19563ce.sol"
}